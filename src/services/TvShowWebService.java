
package services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TvShowWebService", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TvShowWebService {


    /**
     * 
     * @param arg0
     * @return
     *     returns services.TvShow
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addTvShow", targetNamespace = "http://services/", className = "services.AddTvShow")
    @ResponseWrapper(localName = "addTvShowResponse", targetNamespace = "http://services/", className = "services.AddTvShowResponse")
    @Action(input = "http://services/TvShowWebService/addTvShowRequest", output = "http://services/TvShowWebService/addTvShowResponse")
    public TvShow addTvShow(
        @WebParam(name = "arg0", targetNamespace = "")
        TvShow arg0);

    /**
     * 
     * @param id
     * @return
     *     returns services.TvShow
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findTvShow", targetNamespace = "http://services/", className = "services.FindTvShow")
    @ResponseWrapper(localName = "findTvShowResponse", targetNamespace = "http://services/", className = "services.FindTvShowResponse")
    @Action(input = "http://services/TvShowWebService/findTvShowRequest", output = "http://services/TvShowWebService/findTvShowResponse")
    public TvShow findTvShow(
        @WebParam(name = "id", targetNamespace = "")
        Integer id);

    /**
     * 
     * @return
     *     returns java.util.List<services.TvShow>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listTvShows", targetNamespace = "http://services/", className = "services.ListTvShows")
    @ResponseWrapper(localName = "listTvShowsResponse", targetNamespace = "http://services/", className = "services.ListTvShowsResponse")
    @Action(input = "http://services/TvShowWebService/listTvShowsRequest", output = "http://services/TvShowWebService/listTvShowsResponse")
    public List<TvShow> listTvShows();

    /**
     * 
     * @param show
     * @return
     *     returns services.TvShow
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateTvShow", targetNamespace = "http://services/", className = "services.UpdateTvShow")
    @ResponseWrapper(localName = "updateTvShowResponse", targetNamespace = "http://services/", className = "services.UpdateTvShowResponse")
    @Action(input = "http://services/TvShowWebService/updateTvShowRequest", output = "http://services/TvShowWebService/updateTvShowResponse")
    public TvShow updateTvShow(
        @WebParam(name = "show", targetNamespace = "")
        TvShow show);

    /**
     * 
     * @param id
     * @return
     *     returns services.TvShow
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteTvShow", targetNamespace = "http://services/", className = "services.DeleteTvShow")
    @ResponseWrapper(localName = "deleteTvShowResponse", targetNamespace = "http://services/", className = "services.DeleteTvShowResponse")
    @Action(input = "http://services/TvShowWebService/deleteTvShowRequest", output = "http://services/TvShowWebService/deleteTvShowResponse")
    public TvShow deleteTvShow(
        @WebParam(name = "id", targetNamespace = "")
        Integer id);

}
