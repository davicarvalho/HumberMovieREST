
package services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "MovieWebService", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MovieWebService {


    /**
     * 
     * @param id
     * @return
     *     returns services.Movie
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findMovie", targetNamespace = "http://services/", className = "services.FindMovie")
    @ResponseWrapper(localName = "findMovieResponse", targetNamespace = "http://services/", className = "services.FindMovieResponse")
    @Action(input = "http://services/MovieWebService/findMovieRequest", output = "http://services/MovieWebService/findMovieResponse")
    public Movie findMovie(
        @WebParam(name = "id", targetNamespace = "")
        Integer id);

    /**
     * 
     * @return
     *     returns java.util.List<services.Movie>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listMovies", targetNamespace = "http://services/", className = "services.ListMovies")
    @ResponseWrapper(localName = "listMoviesResponse", targetNamespace = "http://services/", className = "services.ListMoviesResponse")
    @Action(input = "http://services/MovieWebService/listMoviesRequest", output = "http://services/MovieWebService/listMoviesResponse")
    public List<Movie> listMovies();

    /**
     * 
     * @param movie
     * @return
     *     returns services.Movie
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateMovie", targetNamespace = "http://services/", className = "services.UpdateMovie")
    @ResponseWrapper(localName = "updateMovieResponse", targetNamespace = "http://services/", className = "services.UpdateMovieResponse")
    @Action(input = "http://services/MovieWebService/updateMovieRequest", output = "http://services/MovieWebService/updateMovieResponse")
    public Movie updateMovie(
        @WebParam(name = "movie", targetNamespace = "")
        Movie movie);

    /**
     * 
     * @param id
     * @return
     *     returns services.Movie
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteMovie", targetNamespace = "http://services/", className = "services.DeleteMovie")
    @ResponseWrapper(localName = "deleteMovieResponse", targetNamespace = "http://services/", className = "services.DeleteMovieResponse")
    @Action(input = "http://services/MovieWebService/deleteMovieRequest", output = "http://services/MovieWebService/deleteMovieResponse")
    public Movie deleteMovie(
        @WebParam(name = "id", targetNamespace = "")
        Integer id);

    /**
     * 
     * @param movie
     * @return
     *     returns services.Movie
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addMovie", targetNamespace = "http://services/", className = "services.AddMovie")
    @ResponseWrapper(localName = "addMovieResponse", targetNamespace = "http://services/", className = "services.AddMovieResponse")
    @Action(input = "http://services/MovieWebService/addMovieRequest", output = "http://services/MovieWebService/addMovieResponse")
    public Movie addMovie(
        @WebParam(name = "movie", targetNamespace = "")
        Movie movie);

}
